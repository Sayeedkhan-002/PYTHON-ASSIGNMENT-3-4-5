                                                                           Chapter 3 
Q1) demonstrate use of the integer types and operators that can be used on them 

>>> #use of integers types
>>> print(3/4)
0.75
>>> print(3%4)
3
>>> print(3//4)
0
>>> print(3**4)
81
>>> a=10;b=25;c=15;d=30;e=2;f=3;g=5
>>> w=a+b-c
>>> x=d**e
>>> y=f%g
>>> print(w,x,y)
20 900 3
>>> h=99999999999999999
>>> i=54321
>>> print(h*i)
5432099999999999945679
>>>
Q2) demonstrate use of float , complex and bool types and the operstors that can be used on them

#use of float
>>> i=3.5
>>> j=1.2
>>> print(i%j)
1.1
>>> #use of complex
>>> a=1+2j
>>> b=3*(1+2j)
>>> c=a*b
>>> print(a)
(1+2j)
>>> print(b)
(3+6j)
>>> print(c)
(-9+12j)
>>> print(a.real)
1.0
>>> print(a.imag)
2.0
>>> print(a.conjugate())
(1-2j)
>>> print(a)
(1+2j)
>>> #use of bool
>>> x=True
>>> y=3>4
>>> print(x)
True
>>> print(y)
False
Q3) demonstrate how to convert from one number type to another 

#convert into int
>>> print(int(3.14))
3
>>> a=int('485')
>>> b=int('768')
>>> c=a+b
>>> print(c)
1253
>>> print(int('1011',2))
11
>>> print(int('341',8))
225
>>> print(int('21',16))
33
>>> #convert to float
>>> print(float(35))
35.0
>>> i=float('4.85')
>>> j=float('7.68')
>>> k=i+j
>>> print(k)
12.53
>>> #convert to complex
>>> print(complex(35))
(35+0j)
>>> x=complex(4.85,1.1)
>>> y=complex(7.68,2.1)
>>> z=x+y
>>> print(z)
(12.53+3.2j)
>>> #convert to bool
>>> print(bool(35))
True
>>> print(bool(1.2))
True
>>> print(int(True))
1
>>> print(int(False))
0
Q4) write a program that makes use of built-in mathematical function

>>> #built-in math function
>>> print(abs(-25))
25
>>> print(pow(2,4))
16
>>> print(min(10,20,30,40,50))
10
>>> print(max(10,20,30,40,50))
50
>>> print(divmod(17,3))
(5, 2)
>>> print(bin(64),oct(64),hex(64))
0b1000000 0o100 0x40
>>> print(round(2.567),round(2.5678,2))
3 2.57
>>>
Q5)write a program that makes use of function in the math module

>>> import math
>>> x=1.5357
>>> print(math.pi,math.e)
3.141592653589793 2.718281828459045
>>> print(math.sqrt(x))
1.2392336341465238
>>> print(math.factorial(6))
720
>>> print(math.fabs(x))
1.5357
>>> print(math.log(x))
0.42898630314951025
>>> print(math.log10(x))
0.1863063842699079
>>> print(math.exp(x))
4.644575595215059
>>> print(math.trunc(x))
1
>>> print(math.floor(x))
1
>>> print(math.ceil(x))
2
>>> print(math.trunc(-x))
-1
>>> print(math.floor(-x))
-2
>>> print(math.ceil(-x))
-1
>>> print(math.modf(x))
(0.5357000000000001, 1.0)
Q6) write a program that generates float and integer random numbers

import random
>>> import datetime
>>> random.seed(datetime.time())
>>> print(random.random())
0.3999227197430455
>>> print(random.random())
0.3542160709432517
>>> print(random.randint(10,100))
48
Q7)how will you identify which of the following is a string,list,tuple,set or dictionary?
{10,20,30,5}
[1,2,3.14,’Nagpur’]
{12:’simple’,43:’complicated’,13:’complex’}
“check it out!”
3+2j

>>> print(type({10,20,30,5}))
<class 'set'>
>>> print(type([1,2,3.14,'Nagpur']))
<class 'list'>
>>> print(type({12:'Simple',43:'complicated',13:'complex'}))
<class 'dict'>
>>> print(type("check it out!"))
<class 'str'>
>>> print(type(3+2J))
<class 'complex'>


                                                                             Chapter 4
Q1)demonstrate how to create multiline strings and whether a string can change after creation.Also show the usage of built-in functions ten(), min(),and max() on a string

#simple strings
>>> msg1='Hoopla'
>>> print(msg1)
Hoopla
>>> #string with special characters
>>> msg2='he said,\'Let Us Python\'.'
>>> File1='C:\\temp\\newfile'
>>> File2=r'C:\temp\newfile'
>>> print(msg2)
he said,'Let Us Python'.
>>> print(File1)
C:\temp\newfile
>>> print(File2)
C:\temp\newfile
>>> #multiline strings
>>> #white space at the beginning of second line becomes part of the string
>>> msg3='What is this life if full of care...\                                                                                                                   We have no time to stand and stare'
>>> #enter at the end  of the first line becomes part of string
>>> msg4="""What is this life if full of care...                                                                                                        we have no time to stand and stare"""
>>> #strings are concatenated properly.()necessary
>>> msg5=('What is this life if full of care...'                                                                                                             'We have no time to stand and stare')
>>> print(msg3)
What is this life if full of care…\                                                                        We have no time to stand and stare
>>> print(msg4)
What is this life if full of care...                                                                                      we have no time to stand and stare
>>> print(msg5)
What is this life if full of care...We have no time to stand and stare
>>> #string replication during printing
>>> msg6='MacLearn!!'
>>> print(msg1*3)
HooplaHooplaHoopla
>>> #immutability of strings
>>> #utopia cannot change,msg7can
>>> msg7='Utopia'
>>> msg8='Today!!!'
>>> msg7=msg7+msg8
>>> print(msg7)
UtopiaToday!!!
>>> #use of built-in functions on strings
>>> print(len('Hoopla'))
6
>>> print(min('Hoopla'))
H
>>> print(max('Hoopla'))
P

Q2) For given string ‘Bamboozeled’,write a program to obtain the following output:-
Ba
Ed
Ed
Mboozed
Mboozed
Mboozed
Bamboo
Bamboo
Bamboo
Bamboo
delzoobmaB
Bamboozled
Bmoze
Bbzd
Boe
BamboozledHype!
BambooMonger!

>>> s='Bamboozeled'
>>> #extract Ba
>>> print(s[0],s[1])
B a
>>> print(s[-10],s[-9])
a m
>>> #extract ed
>>> print(s[8],s[9])
l e
>>> print(s[-2],s[-1])
e d
>>> #extract mboozled
>>> print(s[2:10])
mboozele
>>> print(s[2:])
mboozeled
>>> print(s[-8:])
boozeled
>>> #extract Bamboo
>>> print(s[:6])
Bamboo
>>> print(s[-10:4])
amb
>>> print(s[-10:-4])
ambooz
>>> print(s[:-4])
Bambooz
>>> #reverse Bamboozled
>>> print(s[::-1])
delezoobmaB
>>> print(s[0:10:1])
Bamboozele
>>> print(s[0:10:2])
Bmozl
>>> print(s[0:10:3])
Bbze
>>> print(s[0:10:4])
Bol
>>> s=s+'Hype!'
>>> print(s)
BamboozeledHype!
>>> print(s)
s=s[:6]+'Monger'+s[-1]
BambooMonger!

Q3)for the following strings  find out which are having only alphabets, which are numeric , which are alphanumeric,which are lowercase, which are uppercase.also  find out wheater ‘AndQuietFlows.The Don’ begins with ‘And’ or ends with’And’:

>>> s1='NitiAayog'
>>> s2='And Quiet Flows The Don'
>>> s3='1234567890'
>>> s4='Make $1000 a day'
>>> print('s1=',s1)
s1= NitiAayog
>>> print('s2=',s2)
s2= And Quiet Flows The Don
>>> print('s3=',s3)
s3= 1234567890
>>> print('s4=',s4)
s4= Make $1000 a day
>>> #content test functions
>>> print('check isalpha on s1,s2')
check isalpha on s1,s2
>>> print(s1.isalpha())
True
>>> print(s2.isalpha())
False
>>> print('check isdigit on s3,s4')
check isdigit on s3,s4
>>> print(s1.isalnum())
True
>>> print(s2.isalnum())
False
>>> print(s3.isalnum())
True
>>> print(s4.isalnum())
False
>>> print('check islower on s1,s2')
check islower on s1,s2
>>> print(s1.islower())
False
>>> print(s2.islower())
False
>>> print('check isupper on s1,s2')
check isupper on s1,s2
>>> print(s1.isupper())
False
>>> print(s2.isupper())
False
>>> print('check startswith and endswith on s2')
check startswith and endswith on s2
>>> print(s2.startswith('And'))
True
>>> print(s2.endswith('And'))
False
>>>
Q4) Given the following string:
‘Bring it on’
‘flanked by spaces on either side’
 ‘c:\\users\\kanetkar\\documents’
Write a program to produce the following output using appropriate string functions.
BRING IT ON 
Bring it on
Bring it on
Bring It On
bRING  iT On
6
9
Bring Him on
Flanked by spaces on either side 
            Flanked by spaces on either side
[‘c:’’users’,’kanetkar’,’documents’]
[‘c:’’\\’,’users\\kanetkar\\documents’]

>>> s1='Bring It On'
>>> #conversions
>>> print(s1.upper())
BRING IT ON
>>> print(s1.lower())
bring it on
>>> print(s1.capitialize())
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'str' object has no attribute 'capitialize'
>>> print(s1.capitalize())
Bring it on
>>> print(s1.title())
Bring It On
>>> print(s1.swapcase())
bRING iT oN
>>> #search and replace
>>> print(s1.find('I'))
6
>>> print(s1.find('On'))
9
>>> print(s1.replace('It','Him'))
Bring Him On 
#splitting
>>> s3='c:\\users\\kanetkar\\documents'
>>> print(s3.partition('\\'))
('c:', '\\', 'users\\kanetkar\\documents')
>>> print(s3.split('\\'))
['c:', 'users', 'kanetkar', 'documents']
#trimming
s2=' flanked by spaces on either sides '
print(s2.lstrip())
print(s2.replace('it','him'))

flanked by spaces on either sides 
  flanked by spaces on either sides 


Q5)Find all occourences of ‘T’ in the string ‘The Tiger Tore The Towel’.Replace all occourences of ’T’ with ‘t’.

s='The Terrible Tiger Tore The Towel'
>>> pos=s.find('T',0)
>>> print(pos,s[pos])
0 T
>>> pos=s.find('T',pos+1)
>>> print(pos,s[pos])
4 T
>>> pos=s.find('T',pos+1)
>>> print(pos,s[pos])
13 T
>>> pos=s.find('T',pos+1)
>>> print(pos,s[pos])
19 T
>>> pos=s.find('T',pos+1)
>>> print(pos,s[pos])
24 T
>>> pos=s.find('T',pos+1)
>>> print(pos,s[pos])
28 T
>>> pos=s.find('T',pos+1)
>>> print(pos)
-1
>>> c=s.count('T')
>>> s=s.replace('T','t',c)
>>> print(s)
the terrible tiger tore the towel

                                                            chapter 5



Q1)while purchasing certain items, a discount of 10% is offered if the quantity purchased is more than 1000.if the quantity and the price per item are input through the keyboard, write a program to calculate the total expenses

qty=int(input('enter value of quantity:'))
price=float(input('enter value of price:'))
if qty>1000:
    dis=10
else:
       dis=0
totexp=qty*price-qty*price*dis/100
print('total expenses=rs.'+str(totexp))

enter value of quantity: 1200
enter value of price: 15.50
total expenses=rs.16740.0

Q2) in a company  an employee is paid as under:
      If his basic salary is less than rs.1500, then HRA=10% of basic salary and DA=90% of basic salary. If his salary is either equal to or above rs.1500, thenHRA=RS500 and DA =98% of basic salary. If the employees salary is input through the keyboard write a program to find his gross salary

bs=int(input('enter value of bs:'))
if bs>1000:
    hra=bs*15/100
    da=bs*95/100
    ca=bs*10/100
else:
    hra=bs*10/100
    da=bs*90/100
    ca=bs*5/100
gs=bs+da+hra+ca
print('gross salary=rs.'+str(gs))

enter value of bs: 17000
gross salary=rs.37400.0
  
Q3) percentage  marks obtained by a astudent are input through the keyboard . The student get a division as per the following rules:
Percentage above or equal to 60-first division
Percentage between 50 and 59- second division
Percentage between 40-49-third division
Percentage less than 40- fail
Write a  program to calculate the division obtained by the student
per=int(input('enter value of percentage:'))
if per>=60:
    print('first division')
elif per>=50:
    print('second division')
elif per>=40:
    print('third division')
else:
    print('fail')

enter value of percentage: 55
second division


Q4)a company insures its drivers in the following cases:
        If the driver is married
         If the driver is unmarried, male& above 30 years of age.
         If the driver is unmarried, female & above 25 years of age.
In all other cases , the driver is not insured. If the mariatal status, sex and age of the driver are the inputs, write a program to determine whether the driver should be insured or not

ms=input('enter marital status:')
s=input('enter sex:')
age=int(input('enter age:'))
if(ms=='m')or(ms=='u'and s=='m'and age>30)\
        or(ms=='u'and s=='f'and age>25):
    print('insured')
else:
    print('not insured')


enter marital status: u
enter sex: m
enter age: 23
not insured


Q6) suppose there are four flag variables w,x,y,z. write a program to check in multiple ways whether one of them is true

#different ways to test multiple flags
w,x,y,z=0,1,0,1
if w==1 or x==1 or z==1:
    print('true')
if w or x or y or z:
    print('true')
if any((w,x,y,z)):
    print('true')
if 1 in (w,x,y,z):
    print('true')

true
true
true
true
[ ]:

